(function(){"use strict";angular.module("fitspector",["ngAnimate","ngCookies","ngRoute","firebase","pasvaz.bindonce","infinite-scroll"]).run(function(){return $(".alert").alert()})}).call(this),function(){"use strict";var a;a="undefined"!=typeof exports&&null!==exports?exports:this,a.Distance=function(){function a(b){switch(!1){case!b.hasOwnProperty("meters"):this.meters=b.meters||0;break;case!b.hasOwnProperty("km"):this.meters=(b.km||0)*a.METERS_IN_KILOMETER;break;default:throw new Error("Unknown unit when constructing an instance of Distance")}this.meters=Number(this.meters)}return a.plus=function(b,c){return new a({meters:b.meters+c.meters})},a.subtract=function(b,c){return new a({meters:b.meters-c.meters})},a.zero=new a({meters:0}),a.ratio=function(a,b){return a.meters/b.meters},a.fraction=function(b,c){return new a({meters:b.meters*c})},a.prototype.isZero=function(){return 0===this.meters},a.prototype.asKilometers=function(){return this.meters/a.METERS_IN_KILOMETER},a.prototype.asMeters=function(){return this.meters},a.prototype.subtract=function(b){return new a({meters:this.value()-b.value()})},a.prototype.value=function(){return this.asMeters()},a.prototype.serialize=function(){return this.meters.toFixed(0)},a.deserialize=function(b){return new a({meters:b})},a.METERS_IN_KILOMETER=1e3,a.RACE_DISTANCE_5K=new a({km:5}),a.RACE_DISTANCE_10K=new a({km:10}),a.RACE_DISTANCE_HALF_MARATHON=new a({meters:21098}),a.RACE_DISTANCE_MARATHON=new a({meters:42195}),a}()}.call(this),function(){"use strict";var a;a="undefined"!=typeof exports&&null!==exports?exports:this,a.Intensity=function(){function a(a){this.points=a}return a.plus=function(b,c){return new a(b.points+c.points)},a.subtract=function(b,c){return new a(b.points-c.points)},a.zero=new a(0),a.prototype.isZero=function(){return 0===this.points},a.prototype.value=function(){return this.points},a.prototype.subtract=function(b){return new a(this.value()-b.value())},a}()}.call(this),function(){"use strict";var a,b;a="undefined"!=typeof window&&null!==window?window.moment:require("moment"),b="undefined"!=typeof exports&&null!==exports?exports:this,b.Time=function(){function b(b){this.t=a.duration(b)}return b.plus=function(a,c){return new b({seconds:a.t.asSeconds()+c.t.asSeconds()})},b.zero=new b({seconds:0}),b.ratio=function(a,b){return a.asSeconds()/b.asSeconds()},b.fraction=function(a,c){return new b({seconds:a.t.asSeconds()*c})},b.prototype.isZero=function(){return 0===this.t.asSeconds()},b.prototype.hours=function(){return this.t.hours()+b.HOURS_IN_A_DAY*this.t.days()},b.prototype.minutes=function(){return this.t.minutes()},b.prototype.seconds=function(){return this.t.seconds()},b.prototype.asSeconds=function(){return this.t.asSeconds()},b.prototype.asHours=function(){return this.t.asHours()},b.prototype.subtract=function(a){return new b({seconds:this.asSeconds()-a.asSeconds()})},b.prototype.value=function(){return this.asSeconds()},b.prototype.serialize=function(){return this.value().toFixed(0)},b.deserialize=function(a){return new b({seconds:a})},b.SECONDS_IN_AN_HOUR=3600,b.HOURS_IN_A_DAY=24,b}()}.call(this),function(){"use strict";var a;a="undefined"!=typeof exports&&null!==exports?exports:this,a.Pace=function(){function a(a){var b,c,d,e;e=a.time,b=a.distance,c=e.asHours(),d=b.asKilometers(),this.kmph=d/c}return a.prototype.asTimePerKm=function(){return new Time({seconds:Time.SECONDS_IN_AN_HOUR/this.kmph})},a.prototype.asKmPerHour=function(){return this.kmph},a}()}.call(this),function(){"use strict";var a,b;b="undefined"!=typeof window&&null!==window?window._:require("underscore"),a="undefined"!=typeof exports&&null!==exports?exports:this,a.Zones=function(){function a(a){this.Unit=a,this.zones=[]}return a.mkUnknownZone=function(b,c){var d;return d=new a(b),d.addToZone(a.UNKNOWN_ZONE,c),d},a.prototype.zonePercent=function(a){var b,c,d;return this.zones[a]?(d=this.zones[a],b=this.getTotal(),c=100*this.Unit.ratio(d,b),""+c+"%"):"0%"},a.prototype.gaugePercent=function(a){var b;return b=this.Unit.ratio(this.getTotal(),a),b>1&&(b=1),""+100*b+"%"},a.prototype.gaugeMultiplicator=function(a){var b;return b=this.Unit.ratio(this.getTotal(),a),b>=1.1?b.toFixed(1):null},a.prototype.getTotal=function(){return this.total||(this.total=b(this.zones).reduce(this.Unit.plus,this.Unit.zero)),this.total},a.prototype.addToZone=function(a,b){var c,d;return a>=0&&5>=a?(c=null!=(d=this.zones[a])?d:this.Unit.zero,this.zones[a]=this.Unit.plus(c,b)):void 0},a.prototype.serialize=function(){return b.map(this.zones,function(a){return a.serialize()})},a.deserialize=function(c,d){var e,f;return f=new a(c),e=function(a){return d[a]?f.addToZone(a,c.deserialize(d[a])):void 0},b(this.ALL_ZONES).each(e),f},a.UNKNOWN_ZONE=0,a.VERY_LIGHT_ZONE=1,a.LIGHT_ZONE=2,a.MODERATE_ZONE=3,a.HARD_ZONE=4,a.MAXIMUM_ZONE=5,a.ALL_ZONES=[a.UNKNOWN_ZONE,a.VERY_LIGHT_ZONE,a.LIGHT_ZONE,a.MODERATE_ZONE,a.HARD_ZONE,a.MAXIMUM_ZONE],a.STEEP_DOWNHILL=1,a.DOWNHILL=2,a.FLAT=3,a.UPHILL=4,a.STEEP_UPHILL=5,a}()}.call(this),function(){"use strict";var a;a="undefined"!=typeof exports&&null!==exports?exports:this,a.Workout=function(){function a(a,b){var c;if(this.id=b,this.startTime=moment(a.startTime),c=a.exerciseType.toLowerCase(),this.exerciseType=WorkoutType[c],null==this.exerciseType)throw new Error("Unknown exercise type: "+c);this.notes=a.notes,this.source=a.source,this.avgHR=a.avgHR,this.totalCalories=a.totalCalories,this.totalDistance=new Distance({meters:a.totalDistance}),this.totalDuration=new Time({seconds:a.totalDuration}),this.totalElevation=new Distance({meters:a.totalElevation}),this.labels=a.labels,a.hrZones&&(this.hrZones=Zones.deserialize(Time,a.hrZones)),a.paceZones&&(this.paceZones=Zones.deserialize(Distance,a.paceZones)),a.elevationZones&&(this.elevationZones=Zones.deserialize(Distance,a.elevationZones)),this.pace=this.totalDistance.isZero()?null:new Pace({time:this.totalDuration,distance:this.totalDistance}),this.steepness=this.totalDistance.isZero()||this.totalElevation.isZero()?null:new Distance({meters:this.totalElevation.asMeters()/this.totalDistance.asKilometers()})}return a.prototype.detailsUrl=function(){return null==this.source?null:this.source.hasOwnProperty("runKeeper")?this.source.runKeeper:null},a}()}.call(this),function(){"use strict";var a,b,c,d;d="undefined"!=typeof exports&&null!==exports?exports:this,c=_.range(0,20).map(d3.scale.category20()),b=function(a){return c[a]},a={arc:{name:"Archery",color:b(1)},bbl:{name:"Baseball",color:b(0)},bdm:{name:"Badminton",color:b(2)},bkb:{name:"Basketball",color:b(3)},bth:{name:"Biathlon",color:b(4)},bik:{name:"Cycling",color:b(7)},bob:{name:"Bobsled",color:b(6)},box:{name:"Boxing",color:b(8)},cli:{name:"Climbing",color:b(10)},cur:{name:"Curling",color:b(12)},div:{name:"Scuba diving",color:b(13)},fen:{name:"Fencing",color:b(14)},fbl:{name:"Football",color:b(15)},fho:{name:"Field hockey",color:b(18)},glf:{name:"Golf",color:b(19)},gym:{name:"Gymnastics",color:b(0)},hbl:{name:"Handball",color:b(2)},hik:{name:"Hiking",color:b(11)},hoc:{name:"Hockey",color:b(3)},hrd:{name:"Horseback riding",color:b(4)},isk:{name:"Ice-skating",color:b(6)},row:{name:"Rowing",color:b(8)},rsk:{name:"Roller skating",color:b(10)},run:{name:"Running",color:b(5)},sai:{name:"Sailing",color:b(12)},sho:{name:"Shooting",color:b(13)},ski:{name:"Skiing",color:b(14)},sqs:{name:"Squash",color:b(15)},srk:{name:"Snorkeling",color:b(18)},swi:{name:"Swimming",color:b(16)},tbt:{name:"Table tennis",color:b(19)},ten:{name:"Tennis",color:b(0)},tkd:{name:"Taekwondo",color:b(2)},xcs:{name:"Cross-country skiing",color:b(3)},vlb:{name:"Volleyball",color:b(9)},wsr:{name:"Wind surfing",color:b(4)},wtr:{name:"Weight training",color:b(1)},wre:{name:"Wrestling",color:b(6)},yog:{name:"Yoga",color:b(17)},oth:{name:"Other",color:b(5)}},d.WorkoutType=_.chain(a).map(function(a,b){var c,d;return d=d3.hsl(a.color),c=d3.hsl(d.h,d.s,.99),[b,_.extend(a,{id:b,bgColor:c})]}).object().value()}.call(this),function(){"use strict";var a;a=function(){function a(a,d,e,f){var g,h=this;return c=[],g=function(a){return h.user=a,a.guest||f.auth(a.token),_(c).each(function(b){return b(a)})},g(a.get("user")||b),a.remove("user"),{changeUser:g,registerUserChangeListener:function(a){return c.push(a),a(h.user)},getUser:function(){return h.user},isLoggedIn:function(){return null!=h.user.name},logout:function(a){return g(b),f.logout(),e.path("/"),d.post("/logout").success(function(){return a()})}}}var b,c;return b={guest:!0},c=[],a}(),angular.module("fitspector").service("AuthService",["$cookieStore","$http","$location","DataProviderService",a])}.call(this),function(){"use strict";var a;a=function(){function a(){var a;return a=function(){return new Firebase("https://fitspector-dev.firebaseio.com/")},{getFirebaseRoot:a,auth:function(b){return a().auth(b,function(a){return a?console.log("Authentication error"):void 0})},logout:function(){return a().unauth()}}}return a}(),angular.module("fitspector").service("DataProviderService",[a])}.call(this),function(){"use strict";var a;a=function(){function a(a,b,c){var d,e,f,g,h=this;return f=_.debounce(function(){return a.$broadcast("workouts.update")},100),g=function(){return h.firstWorkout=moment(),h.workouts=[],f()},g(),e=function(a){var b;return b=new Workout(a.val(),a.name()),h.workouts.push(b),b.startTime.isBefore(h.firstWorkout)&&(h.firstWorkout=b.startTime),f()},d=function(a){var b;return"undefined"!=typeof b&&null!==b&&b.off(),null!=a.id?(b=c.getFirebaseRoot().child("users").child(a.id).child("workouts"),g(),b.on("child_added",e)):void 0},b.registerUserChangeListener(d),{getWorkoutsTimeRange:function(){return{beg:h.firstWorkout,end:moment()}},getAllWorkouts:function(){return h.workouts}}}return a}(),angular.module("fitspector").service("WorkoutsProviderService",["$rootScope","AuthService","DataProviderService",a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/distance.html",scope:{value:"=",noIcon:"@"}}}return a}(),angular.module("fitspector").directive("distance",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/elevation.html",scope:{value:"=",noIcon:"@"}}}return a}(),angular.module("fitspector").directive("elevation",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/hr.html",scope:{value:"=",noIcon:"@"}}}return a}(),angular.module("fitspector").directive("hr",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/intensity.html",scope:{value:"=",noIcon:"@"}}}return a}(),angular.module("fitspector").directive("intensity",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/pace.html",scope:{exerciseType:"=",value:"=",noIcon:"@"},link:function(a){return a.showPaceAsMinKm=function(){switch(a.exerciseType.id){case"run":return!0;case"hik":return!0;default:return!1}}()}}}return a}(),angular.module("fitspector").directive("pace",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/steepness.html",scope:{value:"="}}}return a}(),angular.module("fitspector").directive("steepness",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/time.html",scope:{value:"=",noIcon:"@"}}}return a}(),angular.module("fitspector").directive("time",[a])}.call(this),function(){"use strict";var a,b,c,d;a=60,c=function(){function b(){return{replace:!0,restrict:"E",templateUrl:"views/directives/workouts-summary-by-sport.html",scope:{workouts:"=",queryFilter:"=",sportFilterListener:"&"},link:function(b){return b.elementWidth=a,b.$watchCollection("workouts",function(){return d(b)}),b.$watch("queryFilter",function(){return d(b)}),b.sportFilter="all",b.setSportFilter=function(a){return b.sportFilter=b.sportFilter===a?"all":a,b.sportFilterListener({exerciseTypeId:b.sportFilter})},b.$watch("sportFilter",function(){return d(b)}),b.activeColumn=-1,b.setActiveColumn=function(a){return b.activeColumn=a},d(b)}}}return b}(),d=function(a){var b,c;if(null!=a.workouts)return b=a.sportFilter,c=a.$eval("workouts | filter: queryFilter"),a.sports=_.chain(c).filter(function(a){return"all"===b||a.exerciseType.id===b}).groupBy(function(a){return a.exerciseType.id}).map(function(a){return{exerciseType:a[0].exerciseType,sessions:a.length,totalDistance:new Distance({meters:d3.sum(a,function(a){return a.totalDistance.asMeters()})}),totalDuration:new Time({seconds:d3.sum(a,function(a){return a.totalDuration.asSeconds()})}),totalElevation:new Distance({meters:d3.sum(a,function(a){return a.totalElevation.asMeters()})})}}).values().value(),"all"!==b&&0===a.sports.length?a.sports=[{exerciseType:WorkoutType[b],sessions:0,totalDistance:Distance.zero,totalDuration:Time.zero,totalElevation:Distance.zero}]:void 0},angular.module("fitspector").directive("workoutsSummaryBySport",[c]),b=function(){function b(){return{enter:function(a,b){return jQuery(a).attr(c(a)),b()},move:function(a,b){return jQuery(a).animate(c(a,b))}}}var c;return c=function(b){var c;return c=b.scope().$index,{left:c*a}},b}()}.call(this),function(){"use strict";var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o;a={bottom:30,left:30,right:10},d={verticalBetweenMonths:3},b=30,c=11,f=a.bottom+d.verticalBetweenMonths+12*b,e=50,g=function(){function b(b,c){return{replace:!0,restrict:"E",templateUrl:"views/directives/workout-bands.html",scope:{year:"@",valueMode:"="},link:function(d,e){var g,h,i;return i=function(a){return d.$apply(function(){var b,c;return c=d.data.allSports,b=_.indexOf(c,a),c.splice(b,1),c.unshift(a)})},h=function(){var a;if(null!=d.valueMode)return a=function(a){return c(a)(d)},l(e),j(e,d.data,d.valueMode,2013),k(e,d.data,d.valueMode),m(e,a,i,d.data.allSports)},g=function(){var a;return a=b.getAllWorkouts(),d.data=n(a),h()},d.height=f,d.margin=a,d.$on("workouts.update",function(){return d.$apply(g)}),g(),d.$watch(function(){return e.clientWidth},h),d.$watch(function(){return e.clientHeight},h),d.$watch("valueMode",h),d.$watchCollection("data.allSports",h)}}}return b}(),n=function(a){var b,c;return c=_.chain(a).groupBy(function(a){return a.startTime.clone().startOf("month").valueOf()}).map(function(a,b){return{time:Number(b),sports:_.chain(a).groupBy(function(a){return a.exerciseType.id}).map(function(a,b){return{exerciseType:WorkoutType[b],totalDuration:d3.sum(a,function(a){return a.totalDuration.asHours()}),totalDistance:d3.sum(a,function(a){return a.totalDistance.asKilometers()}),totalElevation:d3.sum(a,function(a){return a.totalElevation.asMeters()})}}).sortBy(function(a){return a.exerciseType.id}).value()}}).map(function(a){return _.extend(a,{totalDuration:d3.sum(a.sports,function(a){return a.totalDuration}),totalDistance:d3.sum(a.sports,function(a){return a.totalDistance}),totalElevation:d3.sum(a.sports,function(a){return a.totalElevation})})}).value(),b=_.chain(c).map(function(a){return _.map(a.sports,function(a){return a.exerciseType})}).flatten().uniq(function(a){return a.id}).value(),{workouts:c,allSports:b,maxDuration:d3.max(c,function(a){return a.totalDuration}),maxDistance:d3.max(c,function(a){return a.totalDistance}),maxElevation:d3.max(c,function(a){return a.totalElevation})}},o=d3.scale.linear().domain([0,1]).range([0,b]),l=function(a){var e;return e=d3.select(a[0]).select("g.time-axis").selectAll("text").data(d3.range(0,12)),e.enter().append("svg:text").attr("x",0).attr("y",0).text(function(a){return moment().month(a).format("MMM")}),e.attr("y",function(a,e){return d.verticalBetweenMonths+(b-c)/2+o(e)}),e.exit().remove()},i=function(a,b){switch(b){case"duration":return a.maxDuration;case"distance":return a.maxDistance;case"elevation":return a.maxElevation;default:throw new Error("Unknown value mode: "+b)}},h=function(a,b){switch(b){case"duration":return a.totalDuration;case"distance":return a.totalDistance;case"elevation":return a.totalElevation;default:throw new Error("Unknown value mode: "+b)}},j=function(c,e,f,g){var j,k,l,m,n,p,q;return m=function(a){return _.indexOf(e.allSports,a)},p=_.chain(e.workouts).filter(function(a){return moment(a.time).year()===g}).map(function(a){var b;return b=0,a.sports=_.chain(a.sports).sortBy(function(a){return m(a.exerciseType)}).map(function(a){return _.extend(a,{y0:b,y1:b+=h(a,f)})}).value(),a}).value(),n=c[0],j=d3.time.format("%B %Y"),q=d3.scale.linear().domain([0,i(e,f)]).range([0,n.clientWidth-a.left-a.right]),l=function(a){var c;return c=d3.select(this).selectAll("rect.col").data(function(a){return a.sports},function(a){return a.exerciseType.id}),c.transition().attr("fill",function(a){return a.exerciseType.color}).attr("stroke",function(a){return d3.rgb(a.exerciseType.color).darker()}).attr("width",function(a){return q(a.y1-a.y0)}).attr("x",function(a){return q(a.y0)}),c.enter().append("svg:rect").attr("class","col").attr("x",0).attr("y",function(){return d.verticalBetweenMonths+o(moment(a.time).month())}).attr("width",0).attr("height",b-d.verticalBetweenMonths).each(function(){return $(this).popover({trigger:"hover",container:".workout-bands",title:j(new Date(a.time)),content:"Blah"})})},k=d3.select(n).select("g.bands").selectAll("g.row").data(p),k.enter().append("svg:g").attr("class","row"),k.transition().each(l)},k=function(b,c,d){var e,g,h,j;return h=b[0],j=d3.scale.linear().domain([0,i(c,d)]).range([0,h.clientWidth-a.left-a.right]),e=function(){switch(d){case"duration":return"h";case"distance":return"km";case"elevation":return"m";default:throw new Error("Unknown value mode: "+d)}}(),g=d3.select(b[0]).select(".value-axis").selectAll("g.rule").data(j.ticks(10)),g.enter().append("svg:g").attr("class","rule").attr("transform","translate("+h.clientWidth+", 0)").each(function(){return d3.select(this).append("svg:line").attr("y2",f-a.bottom).style("stroke",function(a){return a?"#f5f5f5":"#000"}).style("stroke-opacity",function(a){return a?.7:null}),d3.select(this).append("svg:text").attr("dy",".35em").attr("y",f-a.bottom)}),g.exit().transition().attr("transform","translate("+h.clientWidth+", 0)").remove(),g.transition().attr("transform",function(a){return"translate("+j(a)+", 0)"}).select("text").text(function(a){return d3.format(",d")(a)+e})},m=function(a,b,c,d){var f;return f=d3.select(a[0]).select(".exercise-types-list").selectAll("li").data(d,function(a){return a.id}),f.enter().append(function(a){return b("<li><sport-icon exercise-type-id='"+a.id+"'></sport-icon></li>")[0]}).on("click",function(a){return c(a)}),f.transition().style("left",function(a,b){return""+e*b+"px"})},angular.module("fitspector").directive("workoutBands",["WorkoutsProviderService","$compile",g])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/workout-gauge.html",scope:{gaugeMax:"=",type:"@",zones:"="}}}return a}(),angular.module("fitspector").directive("workoutGauge",[a])}.call(this),function(){"use strict";var a;a=function(){function a(a){return{replace:!0,restrict:"A",link:function(b,c,d){var e,f,g;return g=c.css("display"),e=d.accessLevel,f=function(){var b;return b=function(){switch(e){case"guest":return!a.isLoggedIn();case"user":return a.isLoggedIn()}}(),c.css("display",b?g:"none")},a.registerUserChangeListener(f)}}}return a}(),angular.module("fitspector").directive("accessLevel",["AuthService",a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",template:'<span class="glyphicon"></span>',link:function(a,b,c){return c.$observe("type",function(c){var d;return d=function(){switch(c){case"distance":return"road";case"elevation":return"chevron-up";case"hr":return"heart";case"intensity":return"tint";case"pace":return"dashboard";case"sessions":return"ok";case"time":return"time";default:throw new Error("Unknown icon type: "+a.type)}}(),b.addClass("glyphicon-"+d)})}}}return a}(),angular.module("fitspector").directive("icon",[a])}.call(this),function(){"use strict";var a;a=function(){function a(a,b,c){return{replace:!0,restrict:"E",templateUrl:"views/directives/import-status.html",scope:{},link:function(d){var e,f,g,h;return g=null,f=null,h=function(){if(null!=f)switch(!1){case null==f.done:return d.importStatus={type:"finished",done:f.done};case null==f.total:return d.importStatus={type:"inprogress",imported:f.imported,total:f.total,importProgress:100*f.imported/f.total};default:return d.importStatus={type:"none"}}},e=function(b){return d.importStatus={},null!=g&&g.off(),b.guest?void 0:(g=c.getFirebaseRoot().child("users").child(b.id).child("importStatus"),f=a(g),f.$on("loaded",h),f.$on("change",h))},d.close=function(){return null!=g?g.remove():void 0},b.registerUserChangeListener(e)}}}return a}(),angular.module("fitspector").directive("importStatus",["$firebase","AuthService","DataProviderService",a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/sorting-ctrl.html",scope:{"this":"@",selected:"@"}}}return a}(),angular.module("fitspector").directive("sortingCtrl",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/sport-icon.html",scope:{exerciseTypeId:"@"},link:function(a){return a.$watch("exerciseTypeId",function(b){return null!=b?a.exerciseType=WorkoutType[b]:void 0})}}}return a}(),angular.module("fitspector").directive("sportIcon",["WorkoutsProviderService",a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/number-watchers.html",link:function(a){return a.getNumWatchers=function(){var a,b;return b=[],a=function(c){return c.data().hasOwnProperty("$scope")&&angular.forEach(c.data().$scope.$$watchers,function(a){return b.push(a)}),angular.forEach(c.children(),function(b){return a($(b))})},a($(document.getElementsByTagName("body"))),b.length}}}}return a}(),angular.module("fitspector").directive("numberWatchers",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return{replace:!0,restrict:"E",templateUrl:"views/directives/screen-size.html"}}return a}(),angular.module("fitspector").directive("screenSize",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){var a;return a=d3.time.format("%d/%m/%Y"),function(b){return a(new Date(b))}}return a}(),angular.module("fitspector").filter("date",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){var a;return a=d3.time.format("%H:%M"),function(b){return a(new Date(b))}}return a}(),angular.module("fitspector").filter("time",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return function(a,b){var c;return null==a?"":(c=function(){switch(b){case"meters":return a.asMeters();default:return a.asKilometers()}}(),c>=10?c.toFixed(0):c.toFixed(1))}}return a}(),angular.module("fitspector").filter("workoutDistance",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return function(a){return null==a?"":(1e3*a.asKilometers()).toFixed(0)}}return a}(),angular.module("fitspector").filter("workoutElevation",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return function(a){return a.value().toFixed(0)}}return a}(),angular.module("fitspector").filter("workoutIntensity",[a])}.call(this),function(){"use strict";var a;a=function(){function a(){return function(a,b){var c,d,e,f;return null==a?"":(f=function(){switch(b){case"short":return[a.minutes(),a.seconds()];default:return[a.hours(),a.minutes()]}}(),c=f[0],d=f[1],e=10>d?"0":"",""+c+":"+e+d)}}return a}(),angular.module("fitspector").filter("workoutTime",[a])}.call(this),function(){"use strict";var a;a=function(){function a(a,b){b.valueModes=[{id:"duration",desc:"Duration"},{id:"distance",desc:"Distance"},{id:"elevation",desc:"Elevation"}],b.valueMode=b.valueModes[1],b.setValueMode=function(a){return b.valueMode=a}}return a}(),angular.module("fitspector").controller("AnalyzeCtrl",["WorkoutsProviderService","$scope",a])}.call(this),function(){"use strict";var a;a=function(){function a(a,b,c){var d,e,f,g,h,i,j,k;b.playersDB=[],i=new Firebase("https://fitspector.firebaseio.com/users"),c(i,b,"playersDB"),f=function(a){var b;return b={name:a.name,img:a.smallImgUrl,me:a.me,total:Distance.zero,days:_.range(0,7).map(function(){return Distance.zero})}},b.players=[],g=function(a){return b.players=_(a).map(f)},b.$watch("playersDB",g,!0),h=[],e=function(){return h=_.range(0,100).map(function(){return Math.random()})},b.competitionMode="distance",b.setCompetitionMode=function(a){return b.competitionMode=a},b.$watch("competitionMode",function(a){return b.leaderboardModeTitle=function(){switch(a){case"distance":return"total workout distance";case"time":return"total workout time";case"elevation":return"total elevation gain";case"intensity":return"workout intensity"}}()}),d=function(){var a,c,d,e,f,g;return 0===b.players.length?[]:(a=function(){switch(b.timeMode){case"week":return 7;case"month":return 30;case"year":return 365}}(),f=_(h).map(function(b){return b*a}),g=function(){switch(b.competitionMode){case"distance":return function(a){return new Distance({km:10*a})};case"time":return function(a){return new Time({hours:a})};case"elevation":return function(a){return new Distance({meters:300*a})};case"intensity":return function(a){return new Intensity(40*a)};default:throw new Error("Unknown competition mode: "+b.competitionMode)}}(),e=function(a){return _.extend({score:g(f.pop())},a)},d=_.chain(b.players).map(e).sortBy(function(a){return-a.score.value()}).value(),c=d[0].score,d=_(d).map(function(a){return _.extend(a,{scoreToLeader:c.subtract(a.score)})}),b.leaderboard=d)},b.$watch("players",d,!0),b.$watch("competitionMode",function(){return e(),d()}),j=function(){switch(b.timeMode){case"year":return"years";case"month":return"months";case"week":return"weeks"}},b.setTimeMode=function(a){return b.timeMode=a},b.goNow=function(){return b.timeStart=moment()},b.next=function(){return b.timeStart.add(j(),1)},b.prev=function(){return b.timeStart.add(j(),-1)},b.setTimeMode("week"),b.goNow(),k=function(){var a,c,d;return b.timeStart.startOf(b.timeMode),b.modeDesc=function(){switch(b.timeMode){case"year":return b.timeStart.format("YYYY");case"month":return b.timeStart.format("MMM YYYY");case"week":return b.timeStart.format("W / gggg")}}(),b.modeFullDesc=function(){switch(b.timeMode){case"week":return a=b.timeStart.clone().add("days",6),d=b.timeStart.format("LL"),c=a.format("LL"),"("+d+" — "+c+")";default:return""}}(),b.leaderboardTimeTitle=function(){switch(b.timeMode){case"year":return""+b.timeStart.format("YYYY");case"month":return b.timeStart.format("MMMM YYYY");case"week":return"week "+b.timeStart.format("W / gggg")}}(),b.modeFullDesc="week"===b.timeMode?(a=b.timeStart.clone().add("days",6),""+b.timeStart.format("LL")+" — "+a.format("LL")):""},b.$watch("timeStart.valueOf()",function(){return k(),e(),d()}),b.$watch("timeMode",function(){return k(),e(),d()})}return a}(),angular.module("fitspector").controller("CompareCtrl",["$http","$scope","angularFire",a])}.call(this),function(){"use strict";var a;a=function(){function a(a,b){a.loginRunKeeper=function(){return b.location.href="/auth/runkeeper"}}return a}(),angular.module("fitspector").controller("LoginCtrl",["$scope","$window",a])}.call(this),function(){"use strict";var a;a=function(){function a(b,c,d){c.isAt=function(c){return b.path()===a.urls[c]},c.goTo=function(c){return b.path(a.urls[c])},c.getUser=function(){return d.getUser()},c.logout=function(){return d.logout(function(){return b.path("/")})}}return a.urls={analyze:"/analyze",login:"/login",compare:"/compare",workouts:"/workouts"},a}(),angular.module("fitspector").controller("NavigationCtrl",["$location","$scope","AuthService",a])}.call(this),function(){"use strict";var a,b;a=30,b=function(){function b(b,c){var d,e,f,g;c.maxGaugeTime=new Time({hours:2}),c.maxGaugeDistance=new Distance({km:20}),c.gaugeModes=[{id:"numbers",desc:"Numbers"},{id:"gauges",desc:"Gauges"},{id:"both",desc:"Both"}],c.gaugeSettings={mode:"both",selectedWorkout:""},c.timeModes=[{id:"week",desc:"Week"},{id:"month",desc:"Month"},{id:"year",desc:"Year"},{id:"all",desc:"All"}],g=function(){var a;switch(c.timeMode.id){case"year":c.timeMode.desc=c.timeStart.format("YYYY");break;case"month":c.timeMode.desc=c.timeStart.format("MMM YYYY");break;case"week":c.timeMode.desc=c.timeStart.format("W / gggg");break;case"all":c.timeMode.desc="All workouts";break;default:throw new Error("Unknown time mode "+c.timeMode.id)}return c.timeMode.fullDesc="week"===c.timeMode.id?(a=c.timeEnd().subtract("days",1),""+c.timeStart.format("LL")+" — "+a.format("LL")):""},d=function(a){switch(c.timeMode.id){case"year":return a.startOf("year");case"month":return a.startOf("month");case"week":return a.startOf("week");case"all":return a=b.getWorkoutsTimeRange().beg;default:throw new Error("Unknown time mode "+c.timeMode.id)}},f=function(a,b){switch(c.timeMode.id){case"year":b.add("years",a);break;case"month":b.add("months",a);break;case"week":b.add("weeks",a);break;case"all":break;default:throw new Error("Unknown time mode "+c.timeMode.id)}return d(b)},c.setTimeMode=function(a){var e;for(c.timeMode={id:a},d(c.timeStart),e=b.getWorkoutsTimeRange();c.timeStart.isAfter(e.end);)c.prev();for(;c.timeEnd().isBefore(e.beg);)c.next();return g()},c.next=function(){return f(1,c.timeStart),g()},c.nextDisabled=function(){return f(1,c.timeStart.clone()).isAfter(b.getWorkoutsTimeRange().end)},c.prev=function(){return f(-1,c.timeStart),g()},c.prevDisabled=function(){return f(-1,c.timeEnd()).isBefore(b.getWorkoutsTimeRange().beg)},c.goNow=function(){return c.timeStart=moment(),f(0,c.timeStart),g()},c.timeEnd=function(){return"all"===c.timeMode.id?b.getWorkoutsTimeRange().end:f(1,c.timeStart.clone())},c.timeStart=moment(),c.setTimeMode("month"),c.goNow(),c.infiniteScrollingPosition=0,c.visibleWorkouts=[],c.scrollWorkouts=function(){return c.infiniteScrollingPosition+=a},e=function(){var d,e,f;return c.infiniteScrollingPosition=a,e=c.timeStart,f=c.timeEnd(),d=c.sportFilter,c.visibleWorkouts=_(b.getAllWorkouts()).filter(function(a){var b,g,h;return h="all"===d||a.exerciseType.id===d,"all"===c.timeMode.id?h:(g=a.startTime.isBefore(f),b=a.startTime.isAfter(e)||a.startTime.isSame(e),g&&b&&h)}),_.defer(function(){return c.$digest()})},c.sportFilter="all",c.setSportFilter=function(a){return c.sportFilter=a},c.getFilteredSportName=function(){return WorkoutType[c.sportFilter].name},c.$watch("sportFilter",e),c.$watch("timeStart.valueOf()",e),c.$watch("timeMode",e),c.$on("workouts.update",e),c.order="-startTime",c.orderBy=function(a){var b;return b="-"+a,c.order=c.order===b?a:b}}return b}(),angular.module("fitspector").controller("WorkoutsCtrl",["WorkoutsProviderService","$scope",b])}.call(this),function(){$("body").tooltip({selector:"[rel=tooltip]"})}.call(this),function(){"use strict";var a;a=function(){function a(a,b,c){var d;a.html5Mode(!0),b.when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl"}).when("/loginFailed",{templateUrl:"views/loginFailed.html"}).when("/workouts",{templateUrl:"views/workouts.html",controller:"WorkoutsCtrl",restricted:!0}).when("/analyze",{templateUrl:"views/analyze.html",controller:"AnalyzeCtrl",restricted:!0}).when("/",{templateUrl:"views/home.html"}).otherwise({redirectTo:"/"}),d=["$location","$q",function(a,b){var c,d;return d=function(a){return a},c=function(c){return 401===c.status&&a.path("/login"),b.reject(c)},function(a){return a.then(d,c)}}],c.responseInterceptors.push(d)}return a}(),angular.module("fitspector").config(["$locationProvider","$routeProvider","$httpProvider",a]),angular.module("fitspector").run(["$rootScope","$location","AuthService",function(a,b,c){return a.$on("$routeChangeStart",function(d,e){return a.error=null,e.restricted&&!c.isLoggedIn()?b.path("/login"):void 0
})}])}.call(this),angular.module("fitspector").run(["$templateCache",function(a){a.put("views/analyze.html",'<div id="analyze"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title text-center">Training volume and intensity.</h3></div></div><div class="btn-toolbar"><div class="btn-group value-ctrls"><button class="btn btn-primary" bindonce="" ng-repeat="mode in valueModes" ng-class="{active: valueMode.id == mode.id}" ng-click="setValueMode(mode)" bo-text="mode.desc"></button></div></div><workout-bands year="2013" value-mode="valueMode.id"></workout-bands></div>'),a.put("views/compare.html","<p>Comparison with friends coming soon...</p>"),a.put("views/directives/distance.html",'<span class="workout-distance"><icon ng-hide="noIcon" type="distance"></icon><span ng-bind="value | workoutDistance"></span><span class="unit">km</span></span>'),a.put("views/directives/elevation.html",'<span class="workout-elevation"><icon ng-hide="noIcon" type="elevation"></icon><span ng-bind="value | workoutElevation"></span><span class="unit">m</span></span>'),a.put("views/directives/hr.html",'<span class="workout-hr" ng-show="value"><icon ng-hide="noIcon" type="hr"></icon><span ng-bind="value"></span><span class="unit">bpm</span></span>'),a.put("views/directives/import-status.html",'<div class="import-status"><div ng-show="importStatus.type == \'inprogress\'" class="alert alert-info"><p>Synchronizing your workouts...</p><p><i>(imported <strong ng-bind="importStatus.imported"></strong> new workouts)</i></p><div class="progress progress-striped active info"><div class="progress-bar" role="progressbar" aria-valuenow="{{importStatus.imported}}" aria-valuemin="0" aria-valuemax="{{importStatus.total}}" style="width: {{importStatus.importProgress}}%"><span class="sr-only">{{importProgress}}% Complete</span></div></div></div><div ng-show="importStatus.type == \'finished\' && importStatus.done" class="alert alert-success alert-dismissable"><button type="button" class="close" data-dismiss="alert" aria-hidden="true" ng-click="close()">&times;</button> Successfully imported <strong>{{importStatus.done}} workouts</strong>.</div></div>'),a.put("views/directives/intensity.html",'<span class="workout-intensity" ng-hide="intensity.isZero()"><icon ng-hide="noIcon" type="intensity"></icon><span ng-bind="value | workoutIntensity"></span><span class="unit">pts</span></span>'),a.put("views/directives/number-watchers.html","<div>Number of watchers in the page: {{getNumWatchers()}}</div>"),a.put("views/directives/pace.html",'<span class="workout-pace" ng-show="value"><icon ng-hide="noIcon" type="pace"></icon><span ng-show="showPaceAsMinKm"><span ng-bind="value.asTimePerKm() | workoutTime: \'short\'"></span> <span class="unit">min/km</span></span> <span ng-hide="showPaceAsMinKm"><span ng-bind="value.asKmPerHour() | number: 1"></span> <span class="unit">km/h</span></span></span>'),a.put("views/directives/screen-size.html",'<div><span>Current screen size:</span> <span class="visible-lg">Large</span> <span class="visible-md">Medium</span> <span class="visible-sm">Small</span> <span class="visible-xs">Extra small</span></div>'),a.put("views/directives/sorting-ctrl.html",'<span class="sorting-ctrls"><span ng-show="selected == this" class="glyphicon glyphicon-sort-by-attributes"></span> <span ng-show="selected == \'-\' + this" class="glyphicon glyphicon-sort-by-attributes-alt"></span> <span ng-hide="selected == this || selected == \'-\' + this" class="glyphicon glyphicon-sort-by-attributes-alt invisible"></span></span>'),a.put("views/directives/sport-icon.html",'<div bindonce="exerciseType" bo-class="\'sport-icon-container bg-for-\' + exerciseType.id" rel="tooltip" data-toggle="tooltip" data-title="{{exerciseType.name}}" ng-style="{\'background-color\': exerciseType.color}"><div bo-class="\'sport-icon sport-\' + exerciseType.id"></div></div>'),a.put("views/directives/steepness.html",'<span class="workout-steepness" ng-show="value"><span ng-bind="value | workoutDistance: \'meters\'"></span><span class="unit">m/km</span></span>'),a.put("views/directives/time.html",'<span class="workout-time"><icon ng-hide="noIcon" type="time"></icon><span ng-bind="value | workoutTime"></span></span>'),a.put("views/directives/workout-bands.html",'<div class="workout-bands"><svg width="100%" ng-attr-height="{{height}}"><g class="bands" ng-attr-transform="translate({{margin.left}}, 0)"></g><g class="time-axis" ng-attr-transform="translate(0, {{margin.top}})"></g><g class="value-axis" ng-attr-transform="translate({{margin.left}}, 0)"></g></svg><ul class="exercise-types-list"></ul></div>'),a.put("views/directives/workout-distance-gauge.html",'<div class="progress pace" ng-hide="distance.getTotal().isZero()" ng-style="{width: distance.gaugePercent(maxGaugeDistance)}"><div bindonce="" ng-repeat="i in [0, 1, 2, 3, 4, 5, 6]" bo-style="{width: distance.zonePercent(i)}" class="progress-bar progress-bar-z{{i}}"></div></div>'),a.put("views/directives/workout-gauge.html",'<div ng-show="zones" bindonce="type" bo-class="\'gauge \' + type"><div class="progress" bo-style="{\'width\': zones.gaugePercent(gaugeMax)}"><div bindonce="" ng-repeat="i in [0, 1, 2, 3, 4, 5, 6]" bo-style="{\'width\': zones.zonePercent(i)}" bo-class="\'progress-bar progress-bar-z\' + i"></div></div><div class="multiplier"><span bo-show="zones.gaugeMultiplicator(gaugeMax)" class="label label-default"><span bo-text="zones.gaugeMultiplicator(gaugeMax)"></span>x</span></div></div>'),a.put("views/directives/workouts-summary-by-sport.html",'<div class="sport-summary"><table><tr class="icon"><th></th><td class="data"><a class="unfilter" ng-show="sportFilter != \'all\'" ng-click="setSportFilter(\'all\')">(Click to show all sports)</a> <span ng-repeat="sport in sports track by sport.exerciseType.id" ng-mouseover="setActiveColumn($index)" ng-mouseout="setActiveColumn(-1)" class="sport-summary-value" ng-style="{ \'left\': elementWidth * $index }" ng-click="setSportFilter(sport.exerciseType.id)"><sport-icon no-tooltip="true" exercise-type-id="{{sport.exerciseType.id}}"></sport-icon></span></td></tr><tr bindonce="" ng-repeat="metric in [\'Sessions\', \'Time\', \'Distance\', \'Elevation\']" class="data-row"><th><span class="text"><span class="hidden-xs" bo-text="metric"></span><icon type="{{metric | lowercase}}"></icon></span></th><td class="data"><span ng-repeat="sport in sports" ng-mouseover="setActiveColumn($index)" ng-mouseout="setActiveColumn(-1)" class="sport-summary-value" ng-style="{ \'left\': elementWidth * $index, \'background-color\': activeColumn == $index ? sport.exerciseType.color : sport.exerciseType.bgColor }"><span ng-switch="metric | lowercase"><span ng-switch-when="sessions"><span ng-bind="sport.sessions"></span><span class="unit">x</span></span><time ng-switch-when="time" no-icon="true" value="sport.totalDuration"></time><distance ng-switch-when="distance" no-icon="true" value="sport.totalDistance"></distance><elevation ng-switch-when="elevation" no-icon="true" value="sport.totalElevation"></elevation></span></span></td></tr></table></div>'),a.put("views/home.html",'<div class="home"><div class="carousel slide" data-ride="carousel"><div class="carousel-inner"><div class="item active"><img src="/images/stopwatch.jpg"><div class="container"><div class="carousel-caption visible-md visible-lg"><h1>Welcome to Fitspector!</h1><p>Fitspector is a service built to help sport enthusiasts better understand their workout data.</p><p>Currently we are in private Beta.<br>If you are interested in trying it out please<br><a href="http://blog.fitspector.com/post/74659062274/private-beta">click here</a> to learn more.</p><p>If you already have access go ahead and <a href="/login">log-in</a>.</p></div></div></div></div></div><div class="alert alert-success visible-xs visible-sm"><h1>Welcome to Fitspector!</h1><p>Fitspector is a service built to help sport enthusiasts better understand their workout data.</p><p>Currently we are in private Beta. If you are interested in trying it out please <a href="http://blog.fitspector.com/post/74659062274/private-beta">click here</a> to learn more.</p><p>If you already have access go ahead and <a href="/login">log-in</a>.</p></div><div class="alert alert-info" id="mc_embed_signup"><h3 class="text-center">Subscribe to our mailing list for updates:</h3><form action="http://fitspector.us7.list-manage.com/subscribe/post?u=680fae86b2a098eec071ae350&amp;id=42a462a6da" method="post" class="form-inline subscribe-form" role="form" novalidate id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate"><div class="email-input"><label class="sr-only" for="mce-EMAIL">Your email for Fitspector\'s mailing list subscription</label><input type="email" name="EMAIL" class="form-control input-lg" id="mce-EMAIL" placeholder="Your email address" required></div><div style="position: absolute; left: -5000px"><input name="b_680fae86b2a098eec071ae350_42a462a6da"></div><button type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="btn btn-lg btn-success">Subscribe</button></form></div><script src="https://apis.google.com/js/plusone.js"></script><div class="google-plus-badge"><div class="g-page" data-href="https://plus.google.com/115638171785797148025" data-layout="landscape" data-showtagline="true" data-width="320"></div></div></div>'),a.put("views/login.html",'<div class="jumbotron"><div class="container"><h2>Login</h2><p><span class="glyphicon glyphicon-warning-sign"></span> Please note that currently Fitspector is in private beta and access is restricted to approved users only.</p><p>If you want to try the service <a href="http://blog.fitspector.com/post/74659062274/private-beta">learn here</a> how to apply for access.</p><p>If you were already granted access just login with your RunKeeper account below.</p><a href="" ng-click="loginRunKeeper()"><img src="http://static1.runkeeper.com/images/assets/login-blue-black-200x38.png"></a></div></div>'),a.put("views/loginFailed.html",'<div class="alert alert-danger"><strong>Login failed.</strong><br><p>Fitspector is in private beta and access is restricted to approved users. Learn <a href="http://blog.fitspector.com/post/74659062274/private-beta">here</a> how to apply for access</p><p>If you believe you should not be seeing this message please contact us at <a href="mailto: beta@fitspector.com">beta@fitspector.com</a>.</p></div>'),a.put("views/topbar.html",'<div class="navbar navbar-inverse navbar-fixed-top" role="navigation" ng-controller="NavigationCtrl"><div class="container"><a class="logo" href="/"><img src="/images/logo.png"></a><div class="navbar-header"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"><span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button></div><div class="navbar-collapse collapse"><ul class="nav navbar-nav"><li ng-class="{active: isAt(\'workouts\')}"><a href="/workouts"><span class="glyphicon glyphicon-list-alt"></span> Workout log</a></li><li ng-class="{active: isAt(\'analyze\')}"><a href="/analyze"><span class="glyphicon glyphicon-align-left"></span> Analyze</a></li></ul><ul class="nav navbar-nav navbar-right"><li><a href="http://blog.fitspector.com" target="_blank">Blog</a></li><li access-level="guest" ng-class="{active: isAt(\'login\')}"><a href="/login"><span class="glyphicon glyphicon-log-in"></span> Login</a></li><li access-level="user"><a href="#" ng-click="logout()" class="visible-xs-sm"><span class="glyphicon glyphicon-off"></span> Logout</a></li><li access-level="user" class="disabled hidden-xs hidden-sm"><a href="#"><span class="user-name" ng-bind="getUser().name"></span></a></li><li access-level="user" class="hidden-xs hidden-sm"><a href="#" class="dropdown-toggle user-toggle" data-toggle="dropdown"><img ng-show="getUser().smallImgUrl" class="img-rounded user-icon" ng-src="{{getUser().smallImgUrl}}"> <span ng-hide="getUser().smallImgUrl" class="glyphicon glyphicon-user user-icon"></span> <b class="caret"></b></a><ul class="dropdown-menu"><li><a href="#" ng-click="logout()"><span class="glyphicon glyphicon-off"></span> Logout</a></li></ul></li></ul></div></div></div>'),a.put("views/workouts.html",'<div class="workouts" infinite-scroll="scrollWorkouts()"><div class="panel panel-default"><div class="panel-heading"><h3 class="panel-title">Your workouts</h3></div><div class="panel-body"><div class="btn-toolbar"><div class="btn-group time-ctrls"><button class="btn btn-primary" bindonce="" ng-repeat="mode in timeModes" ng-class="{active: timeMode.id == mode.id}" ng-click="setTimeMode(mode.id)" bo-text="mode.desc"></button></div><div class="btn-group gauge-modes"><button class="btn btn-primary" bindonce="" ng-repeat="mode in gaugeModes" ng-class="{active: gaugeSettings.mode == mode.id}" ng-click="gaugeSettings.mode = mode.id" bo-text="mode.desc"></button></div><div class="filter"><form class="form-inline"><div class="input-group"><input type="search" class="form-control" ng-model="q" placeholder="Filter workouts..."><span class="input-group-btn"><button class="btn btn-primary" type="button" ng-click="q = \'\'"><span class="glyphicon glyphicon-remove"></span></button></span></div></form></div></div></div><div class="text-center date-selection"><div class="btn-group"><button type="button" class="btn btn-primary" ng-class="{disabled: prevDisabled() || timeMode.id == \'all\'}" ng-click="prev()"><span class="glyphicon glyphicon-chevron-left"></span></button> <button type="button" class="btn btn-primary" ng-click="goNow()" ng-bind="timeMode.desc"></button> <button type="button" class="btn btn-primary" ng-class="{disabled: nextDisabled()  || timeMode.id == \'all\'}" ng-click="next()"><span class="glyphicon glyphicon-chevron-right"></span></button></div><div><small ng-bind="timeMode.fullDesc"></small></div></div><ul class="list-group"><li class="list-group-item" ng-show="sportFilter != \'all\' || visibleWorkouts"><workouts-summary-by-sport workouts="visibleWorkouts" query-filter="q" sport-filter-listener="setSportFilter(exerciseTypeId)"></workouts-summary-by-sport></li></ul><table class="workouts table gauge-mode-{{gaugeSettings.mode}}"><tr ng-hide="visibleWorkouts"><td class="text-center">No <strong ng-if="sportFilter != \'all\'" ng-bind="getFilteredSportName()"></strong> workouts in the selected time period.</td></tr><tr class="workout header" ng-show="visibleWorkouts"><th><div class="workout-info"><div class="date-and-time"><span class="sortHandler" ng-click="orderBy(\'startTime\')">Date</span><sorting-ctrl this="startTime" selected></sorting-ctrl></div><div class="sport-icon"><span class="sortHandler" ng-click="orderBy(\'exerciseType.id\')">Sport</span><sorting-ctrl this="exerciseType.id" selected></sorting-ctrl></div><div class="labels-and-note"><span>Labels & notes</span></div></div><div class="workout-gauges"><div class="time-and-hr"><div class="pull-left"><span class="sortHandler" ng-click="orderBy(\'totalDuration.asSeconds()\')">Duration</span><sorting-ctrl this="totalDuration.asSeconds()" selected></sorting-ctrl></div><div class="pull-right"><span class="sortHandler" ng-click="orderBy(\'avgHR\')">HR (avg)</span><sorting-ctrl this="avgHR" selected></sorting-ctrl></div></div><div class="distance-and-pace"><div class="pull-left"><span class="sortHandler" ng-click="orderBy(\'totalDistance.asMeters()\')">Distance</span><sorting-ctrl this="totalDistance.asMeters()" selected></sorting-ctrl></div><div class="pull-right"><span class="sortHandler" ng-click="orderBy(\'pace.asTimePerKm().asSeconds()\')">Pace (avg)</span><sorting-ctrl this="pace.asTimePerKm().asSeconds()" selected></sorting-ctrl></div></div><div class="elevation-and-steepness"><div class="pull-left"><span class="sortHandler" ng-click="orderBy(\'totalElevation.asMeters()\')">Elevation</span><sorting-ctrl this="totalElevation.asMeters()" selected></sorting-ctrl></div><div class="pull-right"><span class="sortHandler" ng-click="orderBy(\'steepness.asMeters()\')">Steepness</span><sorting-ctrl this="steepness.asMeters()" selected></sorting-ctrl></div></div></div></th></tr><tr bindonce="workout" ng-repeat="workout in visibleWorkouts | filter: q | orderBy: order | limitTo: infiniteScrollingPosition track by workout.id" class="workout" ng-style="{\'background-color\': workout.exerciseType.bgColor}" ng-mouseover="gaugeSettings.selectedWorkout = workout.id" ng-mouseout="gaugeSettings.selectedWorkout = \'\'"><td><div class="workout-info"><div class="details"><a ng-show="workout.detailsUrl()" class="btn btn-primary btn-xs" bo-href="workout.detailsUrl()" target="_blank" rel="tooltip" data-toggle="tooltip" data-delay="500" title="Show workout details in RunKeeper (opens in a new window)"><span class="glyphicon glyphicon-zoom-in"></span></a></div><div class="date-and-time"><div class="date" bo-text="workout.startTime | date"></div><div class="time" bo-text="workout.startTime | time"></div></div><div class="sport-icon"><sport-icon exercise-type-id="{{workout.exerciseType.id}}"></sport-icon></div><div class="labels-and-note"><div bindonce="" ng-repeat="label in workout.labels" class="label label-primary" bo-text="label"></div><div class="notes" bo-text="workout.notes"></div></div></div><div class="workout-gauges"><div class="time-and-hr"><div class="numbers"><time value="workout.totalDuration"></time><hr class="pull-right" value="workout.avgHR"></div><div class="gauge"><workout-gauge type="hr" zones="workout.hrZones" gauge-max="maxGaugeTime"></workout-gauge></div></div><div class="distance-and-pace"><div class="numbers"><distance ng-hide="workout.totalDistance.isZero()" value="workout.totalDistance"></distance><pace class="pull-right" value="workout.pace" exercise-type="workout.exerciseType"></pace></div><div class="gauge"><workout-gauge type="pace" zones="workout.paceZones" gauge-max="maxGaugeDistance"></workout-gauge></div></div><div class="elevation-and-steepness"><div class="numbers"><elevation ng-hide="workout.totalElevation.isZero()" value="workout.totalElevation"></elevation><steepness class="pull-right" value="workout.steepness"></steepness></div><div class="gauge"><workout-gauge type="elevation" zones="workout.elevationZones" gauge-max="maxGaugeDistance"></workout-gauge></div></div></div></td></tr></table></div></div>')}]);