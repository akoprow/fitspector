@workout-height: 60px;

.workouts {
  .date-selection {
    margin-bottom: 10px;
  }

  .workout {
    .make-row();
    padding: 5px;
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;

    div {
      display: inline-block;
    }

    .workout-info {
      .make-md-column(4);
      height: @workout-height;

      & > .date-and-time {
        float: left;
        width: 80px;
        text-align: center;
        vertical-align: middle;
        margin-top: 12px;
        & > .date {
          display: block;
        }
      }

      & > .sport-icon {
        float: left;
	width: 45px;
        vertical-align: middle;
        margin: 10px 8px 0;
      }

      & > .labels-and-note {
        vertical-align: top;
	display: block;
	overflow: hidden;

        & > .label {
          margin: 1px;
          display: inline-block;
        }
        & > .notes {
          display: block;
          text-overflow: ellipsis;
        }
      }
    }

    .workout-gauges {
      .make-row();
      .make-md-column(8);

      .gauge,
      .numbers {
        display: block;
      }
      .numbers {
        padding: 0 15px;
      }
      .progress {
        display: block;
      }

      & > .time-and-hr,
      & > .distance-and-pace,
      & > .elevation-and-steepness {
        .make-md-column(4);
      }
    }
  }
}


.workout-list-row(@color) {
  background-color: fadeout(@color, @table-rows-sport-color-fadeout);
  &:hover {
    background-color: fadeout(@color, @table-rows-sport-color-hover-fadeout);
  }
}

/*
  .xworkouts-list {
    margin-top: 20px;
    table-layout: fixed;

    th {
      text-align: center;
    }

    th, td {
      vertical-align: middle;
      height: 70px;

      &.time-and-hr,
      &.distance-and-pace,
      &.elevation {
        &.gauge-with-numbers {
          vertical-align: top;
        }
      }

      &.date,
      &.sport {
        text-align: center;
      }

      &.date {
        width: @col-date-width;
      }
      &.sport {
        width: @col-sport-icon-width;
      }
      &.notes-and-labels {
        width: @col-notes-width;
      }
      &.time-label,
      &.distance-label,
      &.hr-label,
      &.pace-label,
      &.elevation-label,
      &.steepness-label {
        width: @col-metric-width;
        padding-right: 0;
      }
      &.details {
        width: @col-details-width;
      }
    }

    td.notes-and-labels {
      font-size: 90%;

      .label {
	margin: 1px;
	display: inline-block;
      }

      .notes {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    td.time-and-hr .workout-time,
    td.time-and-hr .workout-hr,
    td.distance-and-pace .workout-distance,
    td.distance-and-pace .workout-pace,
    td.elevation .workout-elevation,
    td.elevation .workout-steepness {
      width: 49%;
      display: inline-block;
      text-align: center;
    }

    .time-gauge .progress,
    .distance-gauge .progress,
    .elevation-gauge .progress {
      opacity: .75;
    }

    td.details .btn {
      visibility: hidden;
    }
    tr:hover td.details .btn {
      visibility: visible;
    }

    / TODO(koper) This is tedious, isn't there an easier way to achieve that?
                   If not it may be worth to eventually generate it programatically. /
    tr.sport-run {
      .workout-list-row(@sport-run-color);
    }
    tr.sport-bik {
      .workout-list-row(@sport-bik-color);
    }
    tr.sport-hik {
      .workout-list-row(@sport-hik-color);
    }
    tr.sport-row {
      .workout-list-row(@sport-row-color);
    }
    tr.sport-sqs {
      .workout-list-row(@sport-sqs-color);
    }
    tr.sport-swi {
      .workout-list-row(@sport-swi-color);
    }
    tr.sport-ten {
      .workout-list-row(@sport-ten-color);
    }
    tr.sport-vlb {
      .workout-list-row(@sport-vlb-color);
    }
    tr.sport-xcs {
      .workout-list-row(@sport-xcs-color);
    }
    tr.sport-yog {
      .workout-list-row(@sport-yog-color);
    }
    tr.sport-wtr {
      .workout-list-row(@sport-wtr-color);
    }
  }

  .animate-workout-list {
    &.ng-enter,
    &.ng-leave {
      .transition(@transition-time, linear)
    }

    &.ng-leave.ng-leave-active,
    &.ng-enter {
      opacity: 0;
    }

    &.ng-leave,
    &.ng-enter.ng-enter-active {
      opacity: 1;
    }
  }
*/